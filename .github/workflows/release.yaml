name: release-image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APP_NAME: repofi
      SKIP_ENV_VALIDATION: 1
      NEXT_PUBLIC_SITE_URL: https://launch.repofi.io/
      NEXT_PUBLIC_CHAIN_ID: 56
      NEXT_PUBLIC_REOWN_PROJECT_ID: 2b0743f1b379dff697a7eec8264f2062
      NEXT_PUBLIC_CONTRACT_LAUNCHPAD_ADDRESS: '0x940bb1b3dc8adedccb8d06334e4fe6844e917972'
      NEXT_PUBLIC_CONTRACT_SWAP_ROUTER_ADDRESS: '0xb971ef87ede563556b2ed4b1c0b0019111dd85d2'
      NEXT_PUBLIC_CONTRACT_QUOTER_ADDRESS: '0x78d78e420da98ad378d7799be8f4af69033eb077'
      NEXT_PUBLIC_CONTRACT_V3_FACTORY_ADDRESS: '0xdb1d10011ad0ff90774d0c6bb92e5c5c8b4461f7'
      NEXT_PUBLIC_GIT_SHA: ${{ github.sha }}
      NEXT_PUBLIC_POSTHOG_API_KEY: phc_AW4nsYpGOqMSBhCsMme4b03KA8H76b0zpDuu53lIG4u
    steps:
      - name: "Get branch name and save to env"
        env:
          IS_PR: ${{ github.EVENT_NAME == 'pull_request' }}
        run: |
          if ${IS_PR}; then
            TAG="${GITHUB_HEAD_REF}"
          else
            TAG="${GITHUB_REF##*/}"
          fi
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.14.2

      - uses: actions/setup-node@v4
        with:
          node-version: 22.10.0
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
          registry-url: https://npm.pkg.github.com

      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: swr.ap-southeast-3.myhuaweicloud.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish to Docker Repository
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          registry: swr.ap-southeast-3.myhuaweicloud.com
          name: scantist-images/${{ env.APP_NAME }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ env.TAG }},latest"
    outputs:
      tag: ${{ env.TAG }}
      app_name: ${{ env.APP_NAME }}
